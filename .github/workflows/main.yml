name: Push-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to Server EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          MYSQL_HOST: ${{ secrets.RDS_MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.RDS_MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.RDS_MYSQL_PASSWORD }}
          MYSQL_PORT: ${{ secrets.RDS_MYSQL_PORT }}
          JWT_SECRET: ${{ secrets.APPS_JWT_SECRET }}
          # 1. login to vm
          # 2. go to directory project that already clone
          # 3. setting environtment
          # 4. build docker images
          # 5. build docker container from its image
          # 6. run container 
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${REMOTE_USER}@${REMOTE_HOST} '
          
            #Now we have got the access of EC2 and we will start the deploy .
              whoami
              sudo chmod 400 /var/run/docker.sock
              cd go-github-action &&
              sudo touch .env &&
              echo APP_PORT=$APP_PORT >> .env &&
              echo MYSQL_HOST=${MYSQL_HOST} >> .env &&
              echo MYSQL_USER=${MYSQL_USER} .env &&
              echo MYSQL_PASSWORD=${MYSQL_PASSWORD} .env &&
              echo MYSQL_PORT=${MYSQL_PORT} .env &&
              echo MYSQL_DATABASE=${MYSQL_DATABASE} .env &&
              echo JWT_SECRET=${JWT_SECRET} .env &&
              sudo docker build -t go-apps-image . &&
              sudo docker container stop go-apps-container || true &&
              sudo docker container rm go-apps-container || true &&
              sudo docker container create --name go-apps-container -p 80:8080 go-apps-image:latest &&
              sudo docker container start go-apps-container
          '